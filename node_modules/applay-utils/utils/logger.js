var pino = require('pino');

var logger = (prefix, filelog, nivel) => {
  var options = {
    timestamp: () => {
      return `,"time":"${new Date().toLocaleString('pt-BR')}"`;
    }
  }
  var modLogger = !filelog ? pino(options) : pino(options, pino.destination(filelog));
  var pinoCaller = require('../libs-custom/pino-caller')(modLogger, { relativeTo: 'any', stackAdjustment: nivel || 1, prefix })
  var consoleFunc = {
    log: (...args) => {
      if (typeof args[0] != 'string') { args.unshift(''); }
      var msg = `${args[0]}`;
      if (args.length > 1) {
        return pinoCaller.info(args.slice(1), msg)
      } else {
        return pinoCaller.info(msg)
      }
    },
    unhandledRejection: (reason, p) => {
      var errolist = reason.stack.toString().split('\n');
      // console.log(errolist);
      var position = errolist[1].replace(')', '').split(':').slice(1);
      var msg = `${errolist[0]}`;
      if (errolist[0].includes('evalmachine.<anonymous>')) {
        position = [errolist[0].split(':')[1], 1];
        msg = errolist[4] + '\n\n' + errolist[1] + '\n' + errolist[2]
      }
      var pinoCallerError = require('../libs-custom/pino-caller')(modLogger, { relativeTo: 'any', stackAdjustment: nivel || 1, prefix, position })
      process.removeListener('unhandledRejection', consoleFunc.unhandledRejection);
      return pinoCallerError.error(msg)
    }
  }
  return consoleFunc;
};

module.exports = logger;